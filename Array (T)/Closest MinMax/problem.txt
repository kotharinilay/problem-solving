Problem Description:
Given an array A, find the size of the smallest subarray such that it contains at least one occurrence of the maximum value of 
the array and at least one occurrence of the minimum value of the array.


Problem Constraints:
1 <= |A| <= 2000


Example Input
Input 1:
A = [1, 3, 2]

Input 2:
A = [2, 6, 1, 6, 9]


Example Output
Output 1:
 2

Output 2:
 3


Example Explanation
Explanation 1:
 Take the 1st and 2nd elements as they are the minimum and maximum elements respectively.

Explanation 2:

 Take the last 3 elements of the array.


Solution:
- First find min and max element from given array
- Now we start iterating and maintain min and max index if we found
- if we found any of min/max, we will update its respective index and if other index already found (not -1 (initial value)), then
we can get elements length between them and compare with min length to keep min length as final answer.